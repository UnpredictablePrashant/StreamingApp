injector:
  enabled: true
  # Optionally configure the Vault address and service account
  vault:
    address: "http://a7a963d65a6ce468bba1f4d3a9bcc8cb-183905259.ap-northeast-3.elb.amazonaws.com:8200"
  # Optionally specify the default role for Vault Agent Injector
  agent:
    # You can configure the vault agent behavior here
    config:
      exit_after_auth: false

database:
  namespace: db
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "mongo-role" # Role for MongoDB access
    vault.hashicorp.com/agent-inject-secret-MONGO_INITDB_ROOT_USERNAME: "secret/data/auth#MONGO_INITDB_ROOT_USERNAME"
    vault.hashicorp.com/agent-inject-secret-MONGO_INITDB_ROOT_PASSWORD: "secret/data/auth#MONGO_INITDB_ROOT_PASSWORD"
    vault.hashicorp.com/agent-inject-secret-MONGO_URI: "secret/data/auth#MONGO_URI"
  labels:
    app: mongo
  replicas: 1
  spec:
    containers:
      name: mongo-container
      image: mongo:latest
      ports:
        containerPort: 27017
      env:
        MONGO_INITDB_ROOT_USERNAME: "MONGO_INITDB_ROOT_USERNAME"
        MONGO_INITDB_ROOT_PASSWORD: "MONGO_INITDB_ROOT_PASSWORD"
      volumeMounts:
        name: mongo-storage
        mountPath: /data/db
    volumes:
      name: mongo-storage
      persistentVolumeClaim:
        claimName: mongo-pvc
    capacity:
      storage: 3Gi
  ports:
    protocol: TCP
    port: 27017
    targetPort: 27017

auth_service:
  namespace: beauth
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "auth-service-role" # Role for the auth service
    # vault.hashicorp.com/agent-inject-secret-JWT_SECRET: "secret/data/auth#JWT_SECRET"
    vault.hashicorp.com/agent-inject-secret-MONGO_URI: "secret/data/auth#MONGO_URI"
  labels:
    app: auth-backend
  replicas: 1
  spec:
    containers:
      name: auth-backend-container
      image: ravikishans/streamingapp:backend_auth
      ports:
        containerPort: 3001
      env:
        MONGO_URI: "MONGO_URI"
  ports:
    protocol: TCP
    port: 3001
    targetPort: 3001

streaming_service:
  namespace: bestream
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "stream-service-role" # Role for the streaming service
    # vault.hashicorp.com/agent-inject-secret-JWT_SECRET: "secret/data/auth#JWT_SECRET"
    vault.hashicorp.com/agent-inject-secret-MONGO_URI: "secret/data/auth#MONGO_URI"
  labels:
    app: auth-backend
  replicas: 1
  spec:
    containers:
      name: stream-backend-container
      image: ravikishans/streamingapp:backend_stream
      ports:
        containerPort: 3002
      env:
        MONGO_URI: "MONGO_URI"
        # JWT_SECRET:
        # AWS_KEY_ID:
        # AWS_SECRET_KEY:
        # AWS_REGION: "ap-northeast-2"
        # AWS_S3_BUCKET: "rakshi2502"
  ports:
    protocol: TCP
    port: 3002
    targetPort: 3002

frontend:
  namespace: frontend
  labels:
    app: streaming-frontend
  replicas: 1
  spec:
    containers:
      name: streaming-frontend-container
      image: ravikishans/streamingapp:frontend
      ports:
        containerPort: 3000
  ports:
    protocol: TCP
    port: 3000
    targetPort: 3000
  data:
    AWS_IP: "0.0.0.0"
    STREAM_PORT: "3002"

vault:
  namespace: vault
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "vault-role"
  data:
    VAULT_TOKEN: "vault-token-secret"
